version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ragflow_postgres
    environment:
      POSTGRES_DB: ragflow_db
      POSTGRES_USER: ragflow
      POSTGRES_PASSWORD: ragflow123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ragflow -d ragflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for Job Queue
  redis:
    image: redis:7-alpine
    container_name: ragflow_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # RAGFlow Vector Database
  ragflow:
    image: infiniflow/ragflow:v0.15.0
    container_name: ragflow_server
    ports:
      - "9380:9380"
    volumes:
      - ragflow_data:/ragflow
    environment:
      - RAGFLOW_HOST=0.0.0.0
      - RAGFLOW_PORT=9380
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9380/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Ollama LLM Server
  ollama:
    image: ollama/ollama:latest
    container_name: ragflow_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Backend API Server
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ragflow_backend
    ports:
      - "8000:8000"
    environment:
      # Database
      - DATABASE_URL=postgresql://ragflow:ragflow123@postgres:5432/ragflow_db
      - REDIS_URL=redis://redis:6379/0
      
      # External Services
      - RAGFLOW_HOST=http://ragflow:9380
      - RAGFLOW_API_KEY=ragflow-YWRtaW46cmFnZmxvdzEyMw
      - OLLAMA_HOST=http://ollama:11434
      
      # Google OAuth (IVC Company Configuration)
      - GOOGLE_CLIENT_ID=792999098406-hmolqmci0o9op9t2vpknmhespml53bau.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_PROJECT_ID=ivc-ragflow-project
      
      # Google Drive Folders
      - GDRIVE_DOCUMENTS_FOLDER_ID=1oas1TEtW26ZNvW2jekk6Y8R2Hb85IUmn
      - GDRIVE_ATTACHMENTS_FOLDER_ID=1dEjEogfE3WlHypaY8vuaWiBeZjjuVTGV
      
      # LLM Configuration
      - LLM_MODEL=mistral:7b-instruct-v0.3-q4_K_M
      - LLM_TEMPERATURE=0.3
      - LLM_TOP_K=40
      - LLM_TOP_P=0.9
      
      # System Configuration
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_PROCESSES=4
      - OCR_ENABLED=true
      
      # Security
      - SECRET_KEY=your-secret-key-here-change-in-production-please
      - TOKEN_ENCRYPTION_KEY=your-32-char-encryption-key-here-123
      
    volumes:
      - ./backend:/app
      - app_data:/app/data
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ragflow:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Frontend Web Interface
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ragflow_frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Initialization Service (runs once)
  init:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ragflow_init
    environment:
      # Same environment as backend
      - DATABASE_URL=postgresql://ragflow:ragflow123@postgres:5432/ragflow_db
      - REDIS_URL=redis://redis:6379/0
      - RAGFLOW_HOST=http://ragflow:9380
      - RAGFLOW_API_KEY=ragflow-YWRtaW46cmFnZmxvdzEyMw
      - OLLAMA_HOST=http://ollama:11434
      - LLM_MODEL=mistral:7b-instruct-v0.3-q4_K_M
      - GOOGLE_CLIENT_ID=792999098406-hmolqmci0o9op9t2vpknmhespml53bau.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
    volumes:
      - ./backend:/app
      - app_data:/app/data
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ragflow:
        condition: service_healthy
      ollama:
        condition: service_healthy
    command: >
      sh -c "
        echo '🚀 Starting RAGFlow MVP initialization...' &&
        echo '⏳ Waiting for all services to be ready...' &&
        sleep 30 &&
        echo '📊 Setting up database schema...' &&
        python scripts/init_database.py &&
        echo '🤖 Setting up Ollama models...' &&
        python scripts/setup_models.py &&
        echo '🔐 Setting up auto-authentication for first Gmail...' &&
        python scripts/auto_auth_first_gmail.py &&
        echo '🎉 RAGFlow MVP initialization completed!' &&
        echo '✅ Your system is ready to go!' &&
        echo '🌐 Frontend: http://localhost:3000' &&
        echo '🔧 Backend API: http://localhost:8000' &&
        echo '📊 RAGFlow: http://localhost:9380' &&
        echo '🤖 Ollama: http://localhost:11434'
      "
    restart: "no"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ragflow_data:
    driver: local
  ollama_data:
    driver: local
  app_data:
    driver: local

networks:
  default:
    name: ragflow_network
    driver: bridge

